server:
  http_listen_port: 9080
  grpc_listen_port: 0

positions:
  filename: /tmp/positions.yaml

clients:
  - url: http://grafhista:3100/loki/api/v1/push

scrape_configs:

# Fullsysteminfodump services #####################################################################
- job_name: services
  static_configs:
  - targets:
      - localhost 
    labels:
      job: service-available
      dataSource: Fullsysteminfodump
      __path__: /logs/fu/HDB*/*/trace/system_availability_*.trc

  pipeline_stages:

  - match:
      selector: '{job="service-available"}'
      stages:

      # Create Label: Action, Watchdog and Service
      - regex:
          expression: '^(?:.*?;){4}(?P<Action>.*?);(?P<Watchdog>.*?);(?:.*?;){9}(?P<Service>.*?);.*$'
      - labels:
          Action:
          Service: 
          Watchdog:    

      # Separate timestamp and messages for further process
      - regex:
          expression: '^0;(?P<time>.*?\..{6});(?P<message>.*$)'

      # Correct  and create loki compatible timestamp 
      - template:
          source: time
          template: '{{ Replace .Value " " "T" -1 }}000+00:00'
      - timestamp:
          source: time
          format: RFC3339Nano
          action_on_failure: fudge


# Fullsysteminfodump nameserver ###################################################################
- job_name: usual-traces
  static_configs:
  - targets:
      - localhost
    labels:
      job: usual-traces
      dataSource: Fullsysteminfodump
      __path__: /logs/fu/HDB*/*/trace/*[0-9].[0-9][0-9][0-9].trc

  pipeline_stages:

  # Drop all lines without timestamp (e.g. stack traces)
  - match:
      selector: '{job="usual-traces"} !~ "[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}." '
      action: drop
      drop_counter_reason: promtail_stack_message
  
  # Main match section
  - match:
      selector: '{job="usual-traces"} '
      stages:

      # Create filename Label to avoid the whole path   
      - regex:
          source: filename
#          expression: '\/logs\/fu\/HDB.*\/.*\/trace\/(?P<TraceFile>.*)\.trc'
          expression: '\/logs\/fu\/HDB.*\/.*\/trace\/(?P<TraceFile>.*?)_.*[0-9].*\.trc'
      - labels:
          TraceFile:  

      # Separate timestamp and messages for further process
      - regex:
          expression: '^\[.+\]\{.+\}\[.+\] (?P<timestamp>.*?\..{6}) (?P<message>.*$)'

      # Create Unit Label
      - regex:
          source: message
          expression: '^..(?P<TraceUnit>.*?)\s.*$'
      - labels:
          TraceUnit: 

      # Create LogLevel lable
      - regex:
          source: message
          expression: '^(?P<LogLevel>.).*?'
      - labels:
          LogLevel:    

      # Correct  and create loki compatible timestamp 
      - template:
          source: timestamp
          template: '{{ Replace .Value " " "T" -1 }}000+00:00'
      - timestamp:
          source: timestamp
          format: RFC3339Nano
          action_on_failure: fudge

# Supportconfig messages ##########################################################################
- job_name: messages
  static_configs:
  - targets:
      - localhost
    labels: 
      job: messages
      dataSource: Supportconfig
      __path__: /logs/sc/messages.txt

  pipeline_stages:

  - match:
      selector: '{job="messages"}'
      stages:

      # Separate timestamp and messages for further process
      - regex:
          expression: '^(?P<timestamp>.*?\..{6}\+\d{2}\:\d{2})(?P<message>.*$)'  

      - timestamp:
          source: timestamp
          format: RFC3339Nano
          action_on_failure: fudge





# sar_db logs (see create_sar_db.py) ##############################################################
- job_name: create_sar_db
  static_configs:
  - targets:
      - localhost
    labels: 
      job: create_sar_db
      __path__: /logs/create_sar_db.log 
      



